/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./api.js":
/*!****************!*\
  !*** ./api.js ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commentDate: () => (/* binding */ commentDate),\n/* harmony export */   comments: () => (/* binding */ comments),\n/* harmony export */   countLikesApi: () => (/* binding */ countLikesApi),\n/* harmony export */   deleteLastComment: () => (/* binding */ deleteLastComment),\n/* harmony export */   fetchAndRenderComments: () => (/* binding */ fetchAndRenderComments),\n/* harmony export */   getInitionalLoading: () => (/* binding */ getInitionalLoading),\n/* harmony export */   getLikeLoading: () => (/* binding */ getLikeLoading),\n/* harmony export */   getPostComment: () => (/* binding */ getPostComment),\n/* harmony export */   handlePostClick: () => (/* binding */ handlePostClick),\n/* harmony export */   isInitionalLoading: () => (/* binding */ isInitionalLoading),\n/* harmony export */   isLikeLoading: () => (/* binding */ isLikeLoading),\n/* harmony export */   isPostComment: () => (/* binding */ isPostComment),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   setUser: () => (/* binding */ setUser),\n/* harmony export */   token: () => (/* binding */ token),\n/* harmony export */   userApi: () => (/* binding */ userApi)\n/* harmony export */ });\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render.js */ \"./render.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"./index.js\");\n\n\nlet comments = [];\n\nconst host = 'https://wedev-api.sky.pro/api/v2/anna-shatilova/comments';\nconst loginHost = ' https://wedev-api.sky.pro/api/user/login';\nconst registerHost = 'https://wedev-api.sky.pro/api/user';\n\nlet token = null;\nfunction setToken(newToken) {\n    token = newToken;\n}\nlet isInitionalLoading = true;\nconst getInitionalLoading = () => isInitionalLoading;\n\nlet isLikeLoading = false;\nconst getLikeLoading = () => isLikeLoading;\n\n\nlet isPostComment = false;\nconst getPostComment = () => isPostComment;\n\n\nlet userApi = null;\nconst setUser = () => userApi;\n\nlet commentDate = null;\n\nconst fetchAndRenderComments = () => {\n    (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)();\n\n    return fetch(host, {\n        method: \"GET\",\n        headers: {\n            Authorization: token,\n        }\n    })\n        .then((response) => {\n            if (response.status === 401) {\n                throw new Error(\"Нет авторизации\");\n            }\n            if (response.status === 500) {\n                throw new Error(\"Сервер сломался\");\n            }\n            return response.json()\n        })\n        .then((responseData) => {\n            isInitionalLoading = false;\n            const appComments = responseData.comments.map((comment) => {\n                commentDate = comment.date;\n                return {\n                    author: comment.author.name,\n                    date: (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.fullDate)(commentDate),\n                    text: comment.text,\n                    likes: comment.likes,\n                    isLiked: false,\n                    id: comment.id\n                }\n            });\n            comments = appComments;\n\n            (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)();\n        })\n        .catch((error) => {\n            if (error.message === \"Сервер сломался\") {\n                alert(\"Кажется, у вас сломался интернет, попробуйте позже\");\n                return;\n            }\n        })\n}\n\nconst handlePostClick = () => {\n    const nameInputElement = document.getElementById('add-form-name');\n    const textAreaElement = document.getElementById('add-form-text');\n    isPostComment = true;\n    (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)();\n\n    fetch(host, {\n        method: \"POST\",\n        body: JSON.stringify({\n            name: nameInputElement.value\n                .replaceAll(\"&\", \"&amp;\")\n                .replaceAll(\"<\", \"&lt;\")\n                .replaceAll(\">\", \"&gt;\")\n                .replaceAll('\"', \"&quot;\"),\n            text: textAreaElement.value\n                .replaceAll(\"&\", \"&amp;\")\n                .replaceAll(\"<\", \"&lt;\")\n                .replaceAll(\">\", \"&gt;\")\n                .replaceAll('\"', \"&quot;\")\n                .replaceAll(\"QUOTE_BEGIN\", \"<div class='quote'>\")\n                .replaceAll(\"QUOTE_END\", \"</div>\"),\n            forceError: true\n        }),\n        headers: {\n            Authorization: token,\n        }\n    })\n        .then((response) => {\n\n            if (response.status === 500) {\n                throw new Error(\"Сервер сломался\");\n            }\n            if (response.status === 400) {\n                throw new Error(\"Плохой запрос\");\n            }\n            return response.json()\n        })\n        .then(() => {\n            isPostComment = false;\n            (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)();\n\n            return fetchAndRenderComments().then(() => {\n                nameInputElement.value = '';\n                textAreaElement.value = '';\n            })\n        })\n        .catch((error) => {\n            if (error.message === \"Сервер сломался\") {\n                handlePostClick();\n                return;\n            }\n            if (error.message === \"Плохой запрос\") {\n                alert(\"Имя и комментарий должны быть не короче 3 символов\");\n                return;\n            }\n            alert('Кажется, у вас отсутствует интернет');\n            console.log(error);\n        })\n}\n\nconst countLikesApi = (id) => {\n    isLikeLoading = true;\n    (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)();\n    fetch(host + \"/\" + id + \"/\" + \"toggle-like\", {\n        method: \"POST\",\n        headers: {\n            Authorization: token,\n        }\n    })\n        .then((result) => {\n            result.isLiked\n                ? result.likes - 1\n                : result.likes + 1;\n            result.isLiked = !result.isLiked;\n            isLikeLoading = false;\n            (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)();\n            return fetchAndRenderComments()\n        })\n}\n\nconst deleteLastComment = (id) => {\n    return fetch(host + \"/\" + id, {\n        method: \"DELETE\",\n        headers: {\n            Authorization: token,\n        }\n    })\n        .then(() => {\n            return fetchAndRenderComments();\n        })\n}\n\n\nconst loginUser = (login, password) => {\n    return fetch(loginHost, {\n        method: \"POST\",\n        body: JSON.stringify({\n            login: login,\n            password: password\n        })\n    })\n        .then((response) => {\n            if (response.status === 400) {\n                throw new Error(\"Неверный логин или пароль\");\n            }\n            return response.json()\n        })\n        .then((user) => {\n            userApi = user;\n            setToken(`Bearer ${user.user.token}`);\n            fetchAndRenderComments();\n        })\n        .catch((error) => {\n            if (error.message === \"Неверный логин или пароль\") {\n                alert(\"Неверный логин или пароль\");\n                return;\n            }\n        })\n}\n\nconst registerUser = (name, login, password) => {\n    return fetch(registerHost, {\n        method: \"POST\",\n        body: JSON.stringify({\n            login: login,\n            name: name,\n            password: password\n        })\n    })\n        .then((response) => {\n            if (response.status === 400) {\n                throw new Error(\"Такой пользователь уже существует\");\n            }\n            return response.json()\n        })\n        .then((user) => {\n            setToken(`Bearer ${user.user.token}`);\n            fetchAndRenderComments();\n        })\n        .catch((error) => {\n            if (error.message === \"Такой пользователь уже существует\") {\n                alert(\"Такой пользователь уже существует\");\n                return;\n            }\n        })\n}\n\n//# sourceURL=webpack://webdev-dom-homework/./api.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fullDate: () => (/* binding */ fullDate),\n/* harmony export */   initEditCommentListeners: () => (/* binding */ initEditCommentListeners),\n/* harmony export */   initReplyToCommentListeners: () => (/* binding */ initReplyToCommentListeners)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./api.js\");\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render.js */ \"./render.js\");\n\n\n\n\n\n\n\n\n\n// Дополнительное задание DOM-2 - работа кнопок \"Редактировать комментарий\"\n\nconst initEditCommentListeners = () => {\n    const editCommentElements = document.querySelectorAll('.edit-comment');\n\n    for (const editCommentElement of editCommentElements) {\n        editCommentElement.addEventListener('click', (event) => {\n            event.stopPropagation();\n\n            const index = editCommentElement.dataset.index;\n            const comment = _api_js__WEBPACK_IMPORTED_MODULE_0__.comments[index];\n\n\n            if (comment.isEdit) {\n                const textArea = document.querySelector('.textarea-text');\n\n                comment.text = textArea.value;\n            }\n\n            comment.isEdit = !comment.isEdit;\n            _api_js__WEBPACK_IMPORTED_MODULE_0__.comments[index].isEdit = comment.isEdit;\n\n            (0,_render_js__WEBPACK_IMPORTED_MODULE_1__.renderApp)();\n        });\n    }\n};\n\n// Сценарий \"Ответ на комментарий\"\n\nconst initReplyToCommentListeners = () => {\n    const replyToCommentElements = document.querySelectorAll('.comment-text');\n\n    for (const replyToCommentElement of replyToCommentElements) {\n        replyToCommentElement.addEventListener('click', () => {\n            const index = replyToCommentElement.dataset.index;\n            const comment = _api_js__WEBPACK_IMPORTED_MODULE_0__.comments[index];\n\n            // Строка кода к основному заданию по DOM -3\n            // textAreaElement.value = comment.author +\"\\r\\n\" + comment.text;\n\n            textAreaElement.value = `QUOTE_BEGIN ${comment.author + ':' + \"\\r\\n\" + comment.text} QUOTE_END`;\n        });\n    };\n};\n\nconst fullDate = (commentDate) => {\n\n    let userDate = new Date(commentDate);\n\n    let date = userDate.getDate();\n    if (date < 10) date = '0' + date;\n\n    let month = userDate.getMonth() + 1;\n    if (month < 10) month = '0' + month;\n\n    let year = userDate.getFullYear() % 100;\n    if (year < 10) year = '0' + year;\n\n    let hours = userDate.getHours();\n    if (hours < 10) hours = '0' + hours;\n\n    let minutes = userDate.getMinutes();\n    if (minutes < 10) minutes = '0' + minutes;\n\n    return `${date}.${month}.${year} ${hours}:${minutes}`;\n};\n\n(0,_api_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRenderComments)();\n\n//# sourceURL=webpack://webdev-dom-homework/./index.js?");

/***/ }),

/***/ "./login-component.js":
/*!****************************!*\
  !*** ./login-component.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderLoginComponent: () => (/* binding */ renderLoginComponent)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./api.js\");\n\n\nfunction renderLoginComponent(appEl, commentsHtml) {\n    let isLoginMode = true;\n    const renderForm = () => {\n        const appHtml = `\n        <div class=\"container\">\n        <ul id=\"comments\" class=\"comments\">\n        ${commentsHtml}\n        </ul>\n          <div class=\"add-form\">\n              <h3 class=\"title\">Форма ${isLoginMode ? \"входа\" : \"регистрации\"}</h3>\n              ${isLoginMode\n                ? \"\"\n                : `\n                <input type=\"text\" class=\"add-form-name add-form-login\" placeholder=\"Введите имя\" id=\"name\"/> <br>`\n            }\n                <input type=\"text\" class=\"add-form-name add-form-login\" placeholder=\"Введите логин\" id=\"login\"/> <br>\n                <input type=\"password\" class=\"add-form-name\" placeholder=\"Введите пароль\" id=\"password\"/>\n              <button id=\"auth-button\" class=\"auth-button add-form-button\">${isLoginMode ? \"Войти\" : \"Зарегистрироваться\"}</button>\n              <button id=\"toggle-button\" class=\"add-form-button auth-button auth-toggle\">Перейти ${isLoginMode ? \"к регистрации\" : \"ко входу\"}</button>\n          </div>\n        </div>`\n\n        appEl.innerHTML = appHtml;\n\n        const authButton = document.getElementById('auth-button');\n        authButton.addEventListener('click', () => {\n            if (isLoginMode) {\n                const login = document.getElementById('login').value;\n                const password = document.getElementById('password').value;\n                if (!login) {\n                    alert('Введите логин');\n                    return;\n                }\n                if (!password) {\n                    alert('Введите пароль');\n                    return;\n                }\n                (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.loginUser)(login, password);\n            } else {\n                const name = document.getElementById('name').value;\n                const login = document.getElementById('login').value;\n                const password = document.getElementById('password').value;\n\n                if (!name) {\n                    alert('Введите имя');\n                    return;\n                }\n                if (!login) {\n                    alert('Введите логин');\n                    return;\n                }\n                if (!password) {\n                    alert('Введите пароль');\n                    return;\n                }\n                (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.registerUser)(name, login, password);\n            }\n        });\n\n        document.getElementById('toggle-button').addEventListener('click', () => {\n            isLoginMode = !isLoginMode;\n            renderForm();\n        })\n    }\n    renderForm();\n}\n\n//# sourceURL=webpack://webdev-dom-homework/./login-component.js?");

/***/ }),

/***/ "./render.js":
/*!*******************!*\
  !*** ./render.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderApp: () => (/* binding */ renderApp)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./api.js\");\n/* harmony import */ var _login_component_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./login-component.js */ \"./login-component.js\");\n\n\n\n\n\n\n\n\n\nconst renderApp = () => {\n  const isInitionalLoading = (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.getInitionalLoading)();\n  const isPostComment = (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.getPostComment)();\n  const isLikeLoading = (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.getLikeLoading)();\n\n  let userApi = (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.setUser)();\n  const appEl = document.getElementById('app');\n\n  const commentsHtml = _api_js__WEBPACK_IMPORTED_MODULE_0__.comments.\n    map((comment, index) => {\n      return `<li class=\"comment\" data-index=\"${index}\">\n      <div class=\"comment-header\">\n        <div>\n          ${comment.author}\n        </div>\n        <div>\n          ${comment.date}\n        </div>\n      </div>\n      <div class=\"comment-body\">\n          ${comment.isEdit\n          ? `<textarea type=\"textarea\" data-index=${index} class=\"textarea-text\" rows=\"4\">${comment.text}</textarea>`\n          : `<div class=\"comment-text\" data-index=\"${index}\">\n            ${comment.text}\n          </div>`\n        }\n      </div>\n      <div class=\"comment-footer\">\n        <div>\n          <button data-index=\"${index}\" class=\"add-form-button edit-comment\">\n            ${comment.isEdit ? 'Сохранить' : 'Редактировать'}\n          </button>\n        </div>\n        <div class=\"likes\">\n          <span class=\"likes-counter\">${comment.likes}</span>\n          <button data-id=\"${comment.id}\" class=\"like-button ${comment.isLiked ? '-active-like' : ''} ${isLikeLoading ? '-loading-like' : ''}\">\n          </button>\n        </div>\n      </div>\n    </li>`;\n    })\n    .join('');\n\n\n  const appHtml = `\n  <div class=\"container\">\n    <ul id=\"comments\" class=\"comments\">\n  ${isInitionalLoading\n      ? `<p class=\"add-comment\" >Комментарии загружаются</p>`\n      : commentsHtml}\n    </ul>\n  ${_api_js__WEBPACK_IMPORTED_MODULE_0__.token\n      ? `\n    <div>\n      <button id=\"button-del\" class=\"add-form-button\">Удалить последний комментарий</button>\n    </div>\n    ${isPostComment\n        ? `<p class=\"add-comment\" >Комментарий добавляется</p>`\n        :\n        `<div id=\"form\" class=\"add-form\">\n          <input id=\"add-form-name\" type=\"text\" class=\"add-form-name\" value=\"${userApi.user.name}\" disabled/>\n          <textarea id=\"add-form-text\" type=\"textarea\" class=\"add-form-text\" placeholder=\"Введите ваш коментарий\"\n          rows=\"4\"></textarea>\n          <div class=\"add-form-row\">\n            <button id=\"add-form-button\" class=\"add-form-button\">Написать</button>\n          </div>\n        </div>`}`\n      : `\n    <div class=\"form-loading\" style=\"margin-top: 20px\">\n    Чтобы добавить комментарий, <a href='#' id=\"go-to-login\">авторизуйтесь</a>\n    </div>`\n    }\n  </div>`\n\n  appEl.innerHTML = appHtml;\n\n  if (!_api_js__WEBPACK_IMPORTED_MODULE_0__.token) {\n    document.getElementById('go-to-login').addEventListener('click', (event) => {\n      event.preventDefault();\n      (0,_login_component_js__WEBPACK_IMPORTED_MODULE_1__.renderLoginComponent)(appEl, commentsHtml);\n\n    })\n  }\n  if (_api_js__WEBPACK_IMPORTED_MODULE_0__.token && !isPostComment) {\n    const buttonElement = document.getElementById('add-form-button');\n    const textAreaElement = document.getElementById('add-form-text');\n\n\n    buttonElement.addEventListener('click', () => {\n\n      textAreaElement.classList.remove('error');\n\n      if (textAreaElement.value.trim() === '') {\n        return textAreaElement.classList.add('error');\n      }\n\n      (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.handlePostClick)();\n    });\n\n    const countLikesElements = document.querySelectorAll('.like-button');\n\n    for (const countLikesElement of countLikesElements) {\n      countLikesElement.addEventListener('click', (event) => {\n        event.stopPropagation();\n        const id = countLikesElement.dataset.id;\n\n        (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.countLikesApi)(id);\n      })\n    };\n\n    // Выключение кнопки при пустом поле ввода\n\n    function onblur() {\n      if (textAreaElement.value === '') {\n        buttonElement.disabled = true;\n        buttonElement.classList.add('button-no-active');\n      } else {\n        buttonElement.disabled = false;\n        buttonElement.classList.remove('button-no-active');\n      }\n    };\n    textAreaElement.addEventListener('input', onblur);\n\n    // Добавление элемента в список по нажатию Enter \n\n    // buttonElement.addEventListener('keyup', () => {\n\n    //   if (KeyboardEvent.key === 13) {\n    //     fetchAndRenderComments();\n    //     textAreaElement.value = '';\n    //   }\n\n    //   renderApp();\n    // });\n\n  };\n\n  if (_api_js__WEBPACK_IMPORTED_MODULE_0__.token && !isInitionalLoading) {\n    document.getElementById('button-del').addEventListener('click', () => {\n      const id = _api_js__WEBPACK_IMPORTED_MODULE_0__.comments[_api_js__WEBPACK_IMPORTED_MODULE_0__.comments.length - 1].id;\n\n      (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.deleteLastComment)(id);\n    });\n\n  }\n}\n\n\n//# sourceURL=webpack://webdev-dom-homework/./render.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ })()
;